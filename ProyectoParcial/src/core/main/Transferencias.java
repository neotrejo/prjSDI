/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.main;

import core.connections.sockets.FileDownloader;
import core.main.listener.DownloadListener;
import core.controller.MainController;
import core.data.Descarga;
import core.gui.custom.CustomTableCellRenderer;
import core.gui.custom.DownloadsTableModel;
import core.utils.MyLogger;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class Transferencias extends javax.swing.JDialog implements DownloadListener{

    /**
     * Creates new form Descargas
     */
    private static JTable table;
    private static DownloadsTableModel model;
    public static ArrayList<String> transferencias;
    public static ArrayList<Descarga> transf;
    
    private static Transferencias descargasFrame;
    
    private Transferencias(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        transferencias = new ArrayList();
        model = new DownloadsTableModel();
        model.setColumnNames(new String[]{"Archivo","Estado","Porcentaje","Destino"});
        
        table = this.jTable1;
        table.setModel(model);
        table.setDefaultEditor(Object.class, null);
        table.setDefaultRenderer(Object.class,new CustomTableCellRenderer());

        setLocationRelativeTo(null);
        setAlwaysOnTop(true);
    }
    
    public static Transferencias getInstance(){
        if(descargasFrame == null){
            descargasFrame = new Transferencias(null, false);
            descargasFrame.loadData();
        }
        
        return descargasFrame;
    }
    
    
    private void loadData(){
        
        transf = MainController.getTransferencias();
        
        model = (DownloadsTableModel) table.getModel();
        model.setRowCount(0);
        
        for (Descarga d:transf) {
            transferencias.add(d.getName());
            model.addRow(d);
        }
    }
        
    public void update(){
//        model = (DefaultTableModel) table.getModel();
//        model.setRowCount(0);
//        
//        for (String name:transferencias) {
//            model.addRow(new String[]{name,"Descargando..."});
//        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transferencias activas");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Archivo", "Estado", "Porcentaje", "Destino"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Transferencias totales:");

        jButton1.setText("Borrar registros");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DownloadsTableModel dtm = (DownloadsTableModel) table.getModel();
        int response = JOptionPane.showConfirmDialog(this, "Â¿Desea borrar todos los registros de descarga?", "Aceptar",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (response == JOptionPane.YES_OPTION) {
            MainController.borrarDescargas();
            dtm.setRowCount(0);
            dtm.fireTableDataChanged();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void downloadStart(int fId,String file,String path,String host,long size,String hostPath,FileDownloader fileDownloader) {

        Descarga nd = new Descarga();
        nd.setId(fId);
        nd.setName(file);
        nd.setPath(path);
        nd.setHost(host);
        nd.setHostPath(hostPath);
        nd.setSize(size);
        
        transf.add(nd);
        
        transferencias.add(file);
        
        DownloadsTableModel dtm = (DownloadsTableModel) table.getModel();
        dtm.addRow(nd);
        dtm.fireTableDataChanged();
    }

    @Override
    public void downloadEnd(int fId,String file) {
        DownloadsTableModel dtm = (DownloadsTableModel) table.getModel();
        Descarga dc = dtm.getDescarga(fId);
        dc.setStatus("Completada");
        dc.setPercent(100);
        jTable1.repaint();
    }

    @Override
    public void updatePercent(int fId,String file, double percent, long bytes) {
        DownloadsTableModel dtm = (DownloadsTableModel) table.getModel();
        Descarga dc = dtm.getDescarga(fId);
        dc.setStatus("Enviando");
        dc.setPercent(((int)percent));
        dc.setLastByte(bytes);
        jTable1.repaint(); 
    }

    @Override
    public void hostOffline(String file,long size) {

    }

    @Override
    public void downloadFail(int fId, String file) {
        DownloadsTableModel dtm = (DownloadsTableModel) table.getModel();
        Descarga dc = dtm.getDescarga(fId);
        dc.setStatus("Incompleta");
        jTable1.repaint();    
    }


}
