/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.main;

import core.connections.multicast.MulticastListener;
import core.connections.multicast.MulticastPolling;
import core.connections.multicast.MulticastServer;
import core.connections.rmi.remote.RMIServer;
import core.connections.sockets.FileServer;
import core.controller.MainController;
import core.data.ClientModel;
import core.data.FileModel;
import core.data.ServerFile;
import core.data.User;
import core.data.Usuario;
import core.gui.admon.SessionI;
import core.gui.admon.SubjectI;
import core.gui.custom.ExplorerCellRenderer;
import core.main.listener.GenericListener;
import core.services.DirectoryIndexCreator;
import core.services.DirectoryObserver;
import core.services.NetworkConnections;
import core.tasks.UserDisconnection;
import core.utils.MyLogger;
import java.util.ArrayList;
import java.util.Stack;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class ExploradorGlobal extends javax.swing.JFrame implements MulticastListener,GenericListener {

    /**
     * Creates new form FileExplorer
     */
    
    private JList lista;
    private ClientModel client;
    private ArrayList<ArrayList<ServerFile>> stack;
    private int currentIndex = 0;
    private static ExploradorGlobal instance;
    private int descargasActivas = 0;
    private int transferenciasActivas = 0;
    private User user;
    
    private ExploradorGlobal(ArrayList<ServerFile> rootFiles,ClientModel client,User user) {
        initComponents();
        
        stack = new ArrayList<>();
        
        this.client = client;
        this.user = user;
        userLabel.setText(user == null ? "": user.getName());
        
        lista = this.archivos;
        lista.setCellRenderer(new ExplorerCellRenderer());   
        
        tituloLbl.setText("Explorador de archivos");
        
        stack.add(rootFiles);        
              
        NetworkConnections.getInstance().start(this);
        
        UserDisconnection.getInstance().start();
        UserDisconnection.getInstance().register(this);

        
        setLocationRelativeTo(null);
    }
    
    public static ExploradorGlobal getInstance(){
        if(instance == null){
            instance = new ExploradorGlobal(new ArrayList<ServerFile>(),null,null);
        }
        return instance;
    }
    public static ExploradorGlobal getInstance(User user){
        if(instance == null){
            instance = new ExploradorGlobal(new ArrayList<ServerFile>(),null,user);
        }
        return instance;
    }
    
    private void refresh(ArrayList<ServerFile> file){
        
        DefaultListModel model = new DefaultListModel();
         
        for(ServerFile f:file){
            model.addElement(new FileModel(f.getName(), f.isIsFile(),f.getFullName(),f.getHost()));
        }
        
        lista.setModel(model);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        archivos = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tituloLbl = new javax.swing.JLabel();
        tLabel = new javax.swing.JLabel();
        dLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        subjectMenu = new javax.swing.JMenu();
        addSubjectItem = new javax.swing.JMenuItem();
        updateSubjectItem = new javax.swing.JMenuItem();
        sessionMenu = new javax.swing.JMenu();
        addSessionItem = new javax.swing.JMenuItem();
        updateSessionItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Archivos");

        archivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(archivos);

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(">");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tituloLbl.setText("Explorador de archivos");

        tLabel.setText("Transfiriendo: 0");

        dLabel.setText("Descargando: 0");

        userLabel.setForeground(new java.awt.Color(0, 51, 153));

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Conectados");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Buscar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Descargas");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Transferencias");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        subjectMenu.setText("Subject");

        addSubjectItem.setText("Add");
        addSubjectItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubjectItemActionPerformed(evt);
            }
        });
        subjectMenu.add(addSubjectItem);

        updateSubjectItem.setText("Update");
        subjectMenu.add(updateSubjectItem);

        jMenuBar1.add(subjectMenu);

        sessionMenu.setText("Session");

        addSessionItem.setText("Add");
        addSessionItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSessionItemActionPerformed(evt);
            }
        });
        sessionMenu.add(addSessionItem);

        updateSessionItem.setText("Update");
        sessionMenu.add(updateSessionItem);

        jMenuBar1.add(sessionMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tituloLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(137, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator1)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dLabel)
                    .addComponent(tLabel))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void archivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivosMouseClicked
        // TODO add your handling code here:
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            
            FileModel cm = (FileModel)list.getSelectedValue();
            
            if(cm.getIsFile()){
                MainController.startDownload(cm.getFullPath(),cm.getHost());
            }else{
                ArrayList<ServerFile> rootFiles = MainController.getFolderContent(cm.getHost(),cm.getFullPath());
                stack.add(rootFiles);
                currentIndex++;
                refresh(rootFiles);
            }
            
        }
    }//GEN-LAST:event_archivosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(currentIndex > 0){
            --currentIndex;
            ArrayList<ServerFile> files = stack.get(currentIndex);
            refresh(files);
        }else{
            currentIndex = 0;
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(currentIndex < stack.size()-1){
            ++currentIndex;
            ArrayList<ServerFile> files = stack.get(currentIndex);
            refresh(files);
        }else{
            currentIndex = stack.size()-1;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Dashboard.getInstance().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Buscar.getInstance().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Descargas.getInstance().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Transferencias.getInstance().setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        
        if(descargasActivas > 0 || transferenciasActivas > 0){
            
            int response = JOptionPane.showConfirmDialog(this, "Tiene descargas o transferencias activas\n¿Desea salir?", "Aceptar",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
            if (response == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
        }else{
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void addSubjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubjectItemActionPerformed
        SubjectI.getInstance("Add subject", this.user).setVisible(true);
        
    }//GEN-LAST:event_addSubjectItemActionPerformed

    private void addSessionItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSessionItemActionPerformed
        SessionI.getInstance("Add session", this.user).setVisible(true);
    }//GEN-LAST:event_addSessionItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addSessionItem;
    private javax.swing.JMenuItem addSubjectItem;
    private javax.swing.JList<String> archivos;
    private javax.swing.JLabel dLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu sessionMenu;
    private javax.swing.JMenu subjectMenu;
    private javax.swing.JLabel tLabel;
    private javax.swing.JLabel tituloLbl;
    private javax.swing.JMenuItem updateSessionItem;
    private javax.swing.JMenuItem updateSubjectItem;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateList() {

    }

    @Override
    public void disconnectedUser(ClientModel usuario) {
    
        ArrayList<ServerFile> root = (ArrayList<ServerFile>)stack.get(0).clone();
        ArrayList<ServerFile> rootOr = stack.get(0);
        for (ServerFile sf : root) {
            if(sf.getHost().equals(usuario.getAddress())){
                rootOr.remove(sf);
            }
        }
        
        if(currentIndex == 0){ //Si es la vista de todos los folder y no solo del servidor donde se entro
            refresh(rootOr);
        }
        
    }
    
    
    @Override
    public void connectedUser(ClientModel usuario) {
        
        System.out.println("Se conecto: "+usuario.getAddress());
        
        ArrayList<ServerFile> files = MainController.getRootContent(usuario.getAddress());
        
        ArrayList<ServerFile> root = stack.get(0);
        
        root.addAll(files);        
        
        if(currentIndex == 0){ //Si es la vista de todos los folder y no solo del servidor donde se entro
            refresh(root);
        }
    }
    
    @Override
    public void startEvent(Object source, String descripcion, int eventId) {
        if(eventId == 0){
            descargasActivas++;
        }else if(eventId == 1){
            transferenciasActivas++;
        }
        
        updateLabels();
    }

    @Override
    public void endEvent(Object source, String descripcion, int eventId) {
        if(eventId == 0){
            descargasActivas--;
        }else if(eventId == 1){
            transferenciasActivas--;
        }
        
        updateLabels();
    }
    
    private void updateLabels(){
        dLabel.setText("Descargando: "+descargasActivas);
        tLabel.setText("Enviando: "+transferenciasActivas);
    }
    
}
